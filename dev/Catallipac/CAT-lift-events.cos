*			**********
*			***Lift***
*			**********
*			Lift
new: vhcl 3 1 24401 "sealift" 2 0 500
seta va02 targ
*Lift not moving
setv ov00 0
cabn -5 0 103 134
attr 0
bhvr 3
tick 0
*Button current
seta ov01 null
*Button destination
seta ov02 null
*int start Y
setv ov10 0
*int stop Y
setv ov11 1

seta va00 null
*			top
new: simp 2 12 24401 "lift" 2 14 500
*link to lift
seta ov03 va02
*link to button above
seta ov01 va00
seta ov02 null
seta va00 targ
doif ov01 <> null
	targ ov01
*	link from button above
	seta ov02 va00
	targ va00
endi
mvto 782 8867
*set to "not waiting, no lift"
setv ov00 0
*Set target X position
setv ov10 posb
subv ov10 0
setv va01 room targ
attr 4
bhvr 1
prt: inew 0 "calift call button in" "useless description" 37 9 0
prt: onew 0 "calift call button out" "useless description" 38 20
*			middle
new: simp 2 12 24401 "lift" 2 14 500
*link to lift
seta ov03 va02
*link to button above
seta ov01 va00
seta ov02 null
seta va00 targ
doif ov01 <> null
	targ ov01
*	link from button above
	seta ov02 va00
	targ va00
endi
mvto 782 9156
*set to "not waiting, no lift"
setv ov00 0
*Set target X position
setv ov10 posb
subv ov10 0
setv va01 room targ
attr 4
bhvr 1
prt: inew 0 "calift call button in" "useless description" 37 9 0
prt: onew 0 "calift call button out" "useless description" 38 20
*			bottom
new: simp 2 12 24401 "lift" 2 14 500
*link to lift
seta ov03 va02
*link to button above
seta ov01 va00
seta ov02 null
seta va00 targ
doif ov01 <> null
	targ ov01
*	link from button above
	seta ov02 va00
	targ va00
endi
mvto 794 9561
*set to "not waiting, has lift"
setv ov00 1
*Set target X position
setv ov10 posb
addv ov10 0
link va01 room targ 100
attr 4
bhvr 1
prt: inew 0 "calift call button in" "useless description" 37 9 0
prt: onew 0 "calift call button out" "useless description" 38 20

targ va00
setv va03 ov10
targ va02
*link lift to bottom button
seta ov01 va00
*move lift to bottom button
subv va03 hght
mvto 917 va03


*			************
*			***//Lift***
*			************




***!!!COPY INSTALLATION SCRIPT TO MAIN INSTALLATION SCRIPT!!!***



* Script 3 extracted from CoC_CAT.agents by Mirality REVELATION
* Thank you Mirality! -Zzzzoot

*call button activate
scrp 2 12 24401 1
	lock
	doif ov00 = 0
*	button is "not waiting, does not have lift"
*	set button to "waiting"
		setv ov00 2
		pose 1
*		"Tell him I said "hi." He'll know what it means."
*		"Ok... Will do."
		mesg writ ov03 1001
		targ from
		doif targ <> null
*			stim Activate button
			stim writ from 89 1
*			stim Wait (a bit)
			stim writ from 75 .5
		endi

	else
*	button is already "has lift"
*	OR button is already "waiting for lift"
		targ from
		doif targ <> null and fmly = 4
*			stim Disappoint
			stim writ from 0 1
		endi
	endi
endm

*going up (only by creature)
scrp 3 1 24401 1
	lock
	targ from
	doif fmly <> 4
		stop
	endi
	inst
	doif ov00 = 0
*	lift is waiting
		targ ov01
		doif ov01 <> null
*	there is a button above us, we can go to it!	
*	set lift to "going up"
			setv mv00 -1
*	set lift's destination button
			seta mv02 ov01
			slow
*	stim Wait (a bit)
			stim writ from 75 1
			spas ownr from
*	set start and stop Y values
			targ mv01
			setv mv10 ov10
			targ mv02
			setv mv11 ov10
			targ ownr
*	turn on light
			pose 1
* Aaaaand, GO!
			tick 1
		else
*	there's no button above us!
*	stim Disappoint
			stim writ from 0 1
		endi
	else
*	the doors are closed man, you're too late
*	stim Disappoint
		stim writ from 0 1
	endi

endm

*going down (only by creature)
scrp 3 1 24401 2
endm

***activate by call button***
scrp 3 1 24401 1001
	
endm



***main loop***
scrp 3 1 24401 1000
	lock
	inst
	doif mv02 = null
*dbg: outs "lift timer start"
*	no known destination, some button woke us up
*	find. it.
*		silence it. 
*			(well, move the lift to it)

*		on a button, ov01 is button below
*				 ov02 is button above
		setv va04 rand 1 2
		targ mv01
		reps 2
			loop
*			get current call button's neighbor. either upper or lower depending on va04
				targ avar targ va04
				doif targ <> null
					doif ov00 = 2
*				call button is waiting!
						seta mv02 targ
					endi
				endi
			untl mv02 <> null or targ = null
*		if va04 is 1, set it to 2, if it's 2, set it to 1
			mulv va04 -1
			addv va04 3
*		so, we loop twice even if we already found an answer. This gives a bias to the closest
*			call buttons. I don't consider that a problem. Almost even a feature. meh
			targ mv01
		repe

		doif mv02 = null
*		no one wants a lift right now
*dbg: outs "no one wants a lift"
			tick 0
			stop
		endi

		targ ownr
*		set direction
		doif avar mv02 10 < posb
			setv mv00 -1
*dbg: outs "going up"
		else
			setv mv00 1
*dbg: outs "going down"
		endi
*		set "speeding up"
		setv mv03 0
*set lift original position and desination position
		setv mv10 posb
		setv mv11 avar mv02 10
		pose 1
	endi

	doif mv03 = 0
*	set origin call button to "not waiting, no lift"
		targ mv01
		setv ov00 0
		targ ownr
***speeding up	
*		starts out as either 1 or -1
		setv va20 mv00
		mulv va20 0.5
		wait rand 0 5
		velo 0 va20
		mulv va20 0.75
		wait rand 1 2
		velo 0 va20
		mulv va20 3
		wait rand 3 4
		velo 0 va20
		mulv va20 1.5
		wait rand 6 8
		velo 0 va20
		mulv va20 1.5
		wait 4
		velo 0 va20
		mulv va20 1.25
		wait 7
		velo 0 va20
		mulv va20 1.25
		wait 2
		velo 0 va20
		mulv va20 1.25
		wait 3
		velo 0 va20

*	set to "coasting"
		setv mv03 1
		tick 10
	elif mv03 = 1
***coasting
		loop
			inst
			targ ownr
			setv va20 mv11
			subv va20 posb
			mulv va20 mv00
*dbg: outv va20
			doif va20 > 200
				wait 1
*			elif vely > 5 or vely < 5
*				setv va21 5
*				mulv va21 mv00
*				mulv va21 -1
*				velo 0 va21
*				wait 1
*			elif va20 > 150
*				setv va21 vely
*				subv va21 mv00
*				velo 0 va21
*				wait 1
*			elif va20 > 100
*				setv va21 vely
*				subv va21 mv00
*				velo 0 va21
*
*			elif va20 > 50
*				setv va21 vely
*				subv va21 mv00
*				velo 0 va21
*			elif va20 > 40
*				velo 0 0
*dbg: outv va21
*				setv va21 vely
*				mulv va21 0.5
*				velo 0 va21
*dbg: outv va21
*dbg: outs ""
*				wait 1
*			elif va20 > 30
*				setv va21 vely
*				mulv va21 0.5
*				velo 0 va21
*				wait 1
			elif va20 > 0
*dbg: outv va20
*				setv va21 vely
*				mulv va21 0.25
*				velo 0 va21
				wait 1
			else
*dbg: outv va20
*	almost there, set to "slowing down"
				setv mv03 2
***slowing down
				velo 0 0
*	we have arrived
				epas 4 0 0
					doif targ <> null
* 				stim "you have travelled in a lift"
						stim writ targ 94 1
					endi
				next
*	set dest call button to "not waiting, has lift"
				targ mv02
				setv ov00 1
*	set self to "waiting"
				setv mv00 0
				seta mv01 mv02
				seta mv02 null
*	turn off light
				pose 0
				targ ownr
*	drop everything
				dpas 0 0 0
				pose 0
**dbg: outs "lift timer stop"
				stop
			endi
		untl 0 = 1
	endi
endm

rscr
enum 3 1 24401
	kill targ
next
enum 2 12 24401
	kill targ
next
enum 2 12 24402
	kill targ
next